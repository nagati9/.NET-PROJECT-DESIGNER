 @model ANA_ProjectDesigner.Models.Domain.Project
@{
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Votre Page</title>
    <link rel="stylesheet" type="text/css" href="~/css/projectDetail.css">
</head>
<body>
    <div class="main-container">
        <!-- Groupe de conteneurs enfants 1, 2, et 3 -->
        <div class="container container1">
            <form id="projectForm" asp-controller="Project" asp-action="ProjectDetail" method="post">
                <input type="hidden" id="selectedProjectId" name="Id" value="@ViewBag.projectId" />
                <!-- Premier container -->
                <select name="selectedProject" onchange="updateProjectIdSelected(this)">

                    @if (Model != null)
                    {
                        <option value="@ViewBag.projectId">@Model.Name</option>
                    }
                    @foreach (var project in @ViewBag.listProject)
                    {
                        <option value="@project.Id">@project.Name</option>
                    }
                    <option value="overview">Overview</option>
                </select>
            </form>
        </div>

        <div id="sprintsButton" class="container container2 " style="display:flex">
            <!-- Deuxième container -->
            <button onclick="openPopup('Add')">Add Sprint</button>
            @if (@ViewBag?.currentSprint?.SprintId != null)
            {
                <button onclick="openPopup('Delete')">Delete sprint</button>
                <button onclick="openPopup('Edit')">Edit sprint</button>
            }
        </div>

        <div id="tasksButton" class="container container2 " style="display:none">
            <select class="selectButton" name="selectedProject" onchange="openPopup(this)">
                <option value="default">Add</option>
                <option value="Ressource">Ressource</option>
                <option value="ItemType">WorkItem</option>
            </select>
            <!-- Deuxième container -->
            @if (@ViewBag?.workItem != null)
            {
                <button onclick="openPopup('DeleteTask')">Delete</button>
                <button onclick="openPopup('EditTask')">Edit</button>
            }
        </div>

        <div class="container container3">
            <!-- Troisième container -->
            @if (@ViewBag.currentSprint != null)
            {
                <p>Sprint date : @ViewBag.currentSprint.DateStart.ToString("dd MMMM") - @ViewBag.currentSprint.DateEnd.ToString("dd MMMM")</p>
                <p>Sprint name : @ViewBag.currentSprint.SprintName</p>
            }
            else
            {
                <!-- Code à exécuter si la condition est fausse -->
                <p>No existing sprint</p>
            }

        </div>
    </div>

    <!-- Groupe de la barre de navigation et de la table -->
    <div class="navigation-container">
        <!-- Barre de navigation -->
        <div class="navigation-bar">
            <div class="tab sprints selected-tab" onclick="changeList('Sprints')">Sprints</div>
            @if (@ViewBag?.currentSprint?.SprintId != null)
            {
                <div class="tab tasks" onclick="changeList('Tasks')">Tasks</div>
                <div class="tab backlog" onclick="changeList('Backlog')">Backlog</div>
            }
        </div>

        <!-- Tableau Sprint -->
        <div class="table-container sprints-table" style="display: block;">
            <form id="sprintForm" asp-controller="Project" asp-action="ProjectDetail" method="get">
                <table id="table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Start Date</th>
                            <th>End Date</th>
                            <th>Comments</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (@ViewBag?.listSprints != null)
                        {

                            <!-- Les lignes du tableau seront ajoutées dynamiquement via JavaScript ou Razor en fonction de l'onglet sélectionné -->
                            @foreach (var sprint in @ViewBag.listSprints)
                            {
                                <tr class="@(sprint.SprintId == @ViewBag.currentSprint.SprintId ? "current-sprint-row" : "selectable-row")" onclick="selectSprint('@sprint.SprintId')">
                                    <td style="display:none">@sprint.SprintId</td>
                                    <td>@sprint.SprintName</td>
                                    <td>@sprint.DateStart.ToString("yyyy-MM-dd")</td>
                                    <td>@sprint.DateEnd.ToString("yyyy-MM-dd")</td>
                                    <td>@sprint.Comments</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
                <input type="hidden" id="selectedSprintId" name="selectedSprintId" value="" />
                <input type="hidden" id="projectId" name="projectId" value="@ViewBag.projectID" />
            </form>
        </div>

        <!-- Tableau Task -->
        <div class="table-container tasks-table" style="display: none;">
            @if (@ViewBag.workItem != null)
            {
                <form class="time-form" asp-controller="WorkItem" asp-action="UpdateTaskTime" method="post">
                    <table>
                        <thead>
                            <tr>
                                <th>Number</th>
                                <th>Type</th>
                                <th>Task</th>
                                @if (@ViewBag.ressources != null)
                                {
                                    foreach (var ressource in @ViewBag.ressources)
                                    {
                                        <th>@ressource.Name</th>
                                    }
                                }
                                <th>Time per task</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Ligne du tableau ajoutée dynamiquement via JavaScript ou Razor en fonction de l'onglet sélectionné -->
                            @{
                                var rowIndex = 1;
                                foreach (var workItem in @ViewBag.workItem)
                                {
                                    <tr class="bgtr">
                                        <td>@rowIndex</td>
                                        <td>@workItem.TaskType</td>
                                        <td>@workItem.TaskName</td>
                                        @if (@ViewBag.ressources != null)
                                        {
                                            foreach (var ressource in @ViewBag.ressources)
                                            {
                                                // Recherche manuelle de la correspondance dans ViewBag.RessourceWorkItem
                                                var OriginalEstimated = 0;
                                                @if (@ViewBag.WorkItemRessource != null)
                                                {

                                                    foreach (var item in ViewBag.WorkItemRessource)
                                                    {
                                                        @if (item.WorkItemId == workItem.Id && item.RessourceId == ressource.Id)
                                                        {
                                                            OriginalEstimated = item.OriginalEstimate;
                                                            break;
                                                        }
                                                    }
                                                }
                                                <td><input id="timeEnter-@workItem.Id" name="timeValues[@workItem.Id][@ressource.Id]" type="number" value="@(OriginalEstimated)" /></td>
                                            }
                                            @foreach (var item in ViewBag.sumTime)
                                            {
                                                if (item.Key == workItem.Id)
                                                {
                                                    <td>@item.Value</td>
                                                }
                                            }
                                        }
                                        <input type="hidden" name="projectId" value="@ViewBag.projectId" />
                                        <input type="hidden" name="sprintId" value="@ViewBag.currentSprint.SprintId" />
                                        <input type="hidden" id="selectedSprintId" name="selectedSprintId" value="" />
                                    </tr>
                                    rowIndex++;
                                }
                            }
                            <tr>
                                <td></td>
                                <td></td>
                                <td class="bgred">Max Capacity</td>
                                @if (@ViewBag.ressources != null)
                                {
                                    foreach (var ressource in @ViewBag.ressources)
                                    {
                                        <td class="bgred">@(ressource.Capacity)</td>
                                    }
                                }
                            </tr>
                        </tbody>
                    </table>
                </form>
            }
        </div>

        <!-- Tableau Task -->
        <div class="table-container backlog-table" style="display: none;">
            <form id="sprintForm" asp-controller="Project" asp-action="ProjectDetail" method="get">
                <table id="table">
                    <thead>
                        <tr>
                            <th>Task Container</th>
                            <th>Task Name</th>
                            <th>Sprint</th>
                            <th>Comments</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (@ViewBag.backlogItems != null)
                        {
                            <!-- Les lignes du tableau seront ajoutées dynamiquement via JavaScript ou Razor en fonction de l'onglet sélectionné -->
                            @foreach (var sprintWithWorkItems in ViewBag.backlogItems)
                            {
                                var sprint = sprintWithWorkItems.Sprint;
                                foreach (var workItem in sprintWithWorkItems.WorkItems)
                                {
                                    <tr class="bgtr">
                                        <td>@workItem.TaskType</td>
                                        <td>@workItem.TaskName</td>
                                        <td>@sprint.SprintName</td>
                                        <td>@sprint.Comments</td>
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                </table>
                <input type="hidden" id="selectedSprintId" name="selectedSprintId" value="" />
                <input type="hidden" id="projectId" name="projectId" value="@ViewBag.projectID" />
            </form>
        </div>



        @Html.Partial("PopUp/_CreateSprintPopUp")


        <!-- Popup pour l'édition du sprint -->
        @Html.Partial("PopUp/_EditSprintPopUp")

        @Html.Partial("PopUp/_AddSprintRessourcePopUp")


        <!-- Div pour la pop-up -->
        @Html.Partial("PopUp/_DeleteSprintPopUp")

        <!-- Div pour la pop-up -->
        @Html.Partial("PopUp/_DeleteTaskPopUp")

        <!-- Div pour la pop-up -->
        @Html.Partial("PopUp/_DeleteTaskPopUp")

        @Html.Partial("PopUp/_EditTaskPopUp")

        <!-- Div pour la pop-up -->
        @Html.Partial("PopUp/_CreateWorkItemPopUp")

        <!-- Div pour l'arrière-plan obscurci de la pop-up -->
        <div class="overlay" id="overlay" onclick="closePopup()"></div>

        <script>

            document.addEventListener('DOMContentLoaded', function () {
                // Ajoutez un gestionnaire d'événements à chaque champ d'entrée
                var timeForms = document.querySelectorAll('.time-form');
                timeForms.forEach(function (form) {
                    form.addEventListener('change', function () {
                        // Soumettez le formulaire lorsque le champ d'entrée change
                        form.submit();
                    });
                });
            });
            function selectSprint(sprintId) {
                // Mettre à jour la valeur du champ de formulaire caché
                document.getElementById('selectedSprintId').value = sprintId;

                // Soumettre le formulaire
                document.getElementById('sprintForm').submit();
            }

            // Fonction pour retourner l'ID du project selectionné
            function updateProjectIdSelected(select) {
                var selectedValue = select.value;

                // Si l'option "Overview" est sélectionnée, rediriger vers l'URL correspondante
                if (selectedValue === "overview") {
                    redirectToOverview();
                } else {
                    // Mettre à jour la valeur du champ de formulaire caché et soumettre le formulaire
                    document.getElementById('selectedProjectId').value = selectedValue;
                    document.getElementById('projectForm').submit();
                    window.location.href = '/Project/ProjectDetail?projectId=' + selectedValue;
                }
            }

            // Fonction de redirection vers l'overview
            function redirectToOverview() {
                window.location.href = '@Url.Action("Overview", "Profil")';
            }

            // Fonction pour ouvrir les pop-up dans l'onglet Task
            function openPopupTask(content) {
                console.log(content.value);

            }

            // Fonction pour ouvrir la pop-up
            function openPopup(content) {
                document.getElementById('overlay').style.display = 'block';
                console.log(content.value)
                if (content.value != undefined) {
                    switch (content.value) {
                        case 'Ressource':
                            console.log(content.value)
                            document.getElementById('popupAddRessource').style.display = 'block';
                            break;
                        case 'ItemType':
                            document.getElementById('popupWorkItem').style.display = 'block';
                            break;
                        case 'Task':
                            document.getElementById('popupTask').style.display = 'block';
                            break;

                        default:
                            console.log(`Content not found`);
                    }
                } else {
                    switch (content) {
                        case 'Add':
                            document.getElementById('popup').style.display = 'block';
                            break;
                        case 'Delete':
                            document.getElementById('popupDelete').style.display = 'block';
                            break;
                        case 'Edit':
                            document.getElementById('popupEdit').style.display = 'block';
                            break;
                        case 'DeleteTask':
                            document.getElementById('popupDeleteTask').style.display = 'block';
                            break;
                        case 'EditTask':
                            document.getElementById('popupEditTask').style.display = 'block';
                            break;
                        default:
                            console.log(`Content not found`);
                    }
                }
            }

            // Fonction pour fermer la pop-up
            function closePopup() {
                document.getElementById('popup').style.display = 'none';
                document.getElementById('popupDelete').style.display = 'none';
                document.getElementById('popup').style.display = 'none';
                document.getElementById('popupWorkItem').style.display = 'none';
                document.getElementById('popupAddRessource').style.display = 'none';
                document.getElementById('popupDeleteTask').style.display = 'none';
                document.getElementById('popupEditTask').style.display = 'none';
                document.getElementById('overlay').style.display = 'none';
                document.getElementById('popupEdit').style.display = 'none';
            }

            function saveSprint() {
                closePopup();
            }

            // Fonction pour changer la liste en fonction de l'onglet cliqué
            function changeList(tab) {
                // Réinitialiser la couleur de tous les onglets
                var tabs = document.querySelectorAll('.tab');
                tabs.forEach(function (t) {
                    t.classList.remove('selected-tab');
                });

                // Appliquer la classe de sélection à l'onglet cliqué
                var selectedTab = document.querySelector('.tab.' + tab.toLowerCase());
                selectedTab.classList.add('selected-tab');

                // Masquer tous les tableaux
                var tables = document.querySelectorAll('.table-container');
                tables.forEach(function (table) {
                    table.style.display = 'none';
                });

                // Afficher le tableau correspondant à l'onglet
                var selectedTable = document.querySelector('.' + tab.toLowerCase() + '-table');
                selectedTable.style.display = 'block';

                if (tab == "Backlog") { tab = "Backlog" }
                var containers = document.querySelectorAll('.container2');
                containers.forEach(function (container) {
                    container.style.display = 'none';
                });

                // Afficher le tableau correspondant à l'onglet
                var selectedTable = document.querySelector('.' + tab.toLowerCase() + '-table');
                selectedTable.style.display = 'block';


                // Afficher le container correspondant à l'onglet
                var selectedContainerId = tab.toLowerCase() + 'Button';
                var selectedContainer = document.getElementById(selectedContainerId);
                selectedContainer.style.display = 'flex';
            }

            // Fonction pour activer/désactiver le bouton en fonction de la sélection des checkboxes
            function updateDeleteButtonState() {
                var checkboxes = document.querySelectorAll('.select-checkbox');
                var deleteButton = document.getElementById('deleteButton');

                var atLeastOneCheckboxSelected = false;
                var moreThanOneCheckboxSelected = false;

                checkboxes.forEach(function (checkbox) {
                    if (checkbox.checked) {
                        if (atLeastOneCheckboxSelected) {
                            moreThanOneCheckboxSelected = true;
                        } else {
                            atLeastOneCheckboxSelected = true;
                        }
                    }
                });

                deleteButton.disabled = !atLeastOneCheckboxSelected || moreThanOneCheckboxSelected;
            }

            function prepareDeleteForm() {
                var checkboxes = document.querySelectorAll('.select-checkbox:checked');
                var sprintIdInput = document.getElementById('SprintIdToDelete');

                if (checkboxes.length === 1) {
                    sprintIdInput.value = checkboxes[0].getAttribute('data-sprint-number');
                    return true; // Continuer avec la soumission du formulaire
                } else {
                    alert("Please select exactly one sprint to delete.");
                    return false; // Annuler la soumission du formulaire
                }
            }
        </script>
</body>
</html>
